input RetailerInput {
    retailerId: Int
    retailerName: String
    groupId: String
    merchantId: String
    MaxBagTotal: String
    MaxGcValue: String
    MaxItems: String
    MinGcValue: String
    ReminderSchedule: String
    categoryId: [Int]
}

type Retailer {
    retailerId: Int
    groupId: String
    merchantId: String
    transId: String
    retailerName: String
    retailerLogo: String
    retailerActive: String
    retailerProfiles: [RetailerProfile]
    categories: [Category]
    tokenKey: String
    customStyle: String
    bannerName: String
    status: Int
    message: String
}

type AllRetailers {
    retailers: [Retailer]
    total: Int
    status: Int
    message: String
}
type RetailerCardDesign {
    catid: Int
    catdesc: String
    catdisplayorder: Int
    cards: [CardDesign]
}

type RetailerProfile {
    retailerprofilename: String
    retailerprofilevalue: String
}

type CardDesign {
    cardid: Int
    carddesc: String
    cardimagename: String
    carddisplayorder: Int
    styles: String
}

input CardDesignInput {
    cardid: Int
    carddesc: String
    cardimagename: String
    carddisplayorder: Int
    styles: String
    type: String
}

type GoogleAnalytics {
    trackingID: String
}

type MerchantInfo {
    retailerName: String
    retailerLogo: String
    status: Boolean
    message: String
}

input Filter {
    "searchText can be groupid, merchant id, retailer name"
    searchText: String
    "searchType can be any, groupid, merchantid, retailername"
    searchType: String
    "number of records to display, default 10"
    pageSize: Int
    "page number to be returned, default is 1"
    pageNo: Int
    order: String
    orderBy: String
}

type Query {
    retailer(
        groupid: String
        merchantid: String
        retailername: String
    ): Retailer
    carddesigns(retailerid: Int!): [RetailerCardDesign]
    analytics: GoogleAnalytics
    merchant(merchantid: String!): MerchantInfo

    allRetailers(input: Filter!): AllRetailers

    searchRetailers(input: Filter!): [Retailer]
}

type Mutation {
    addEditRetailer(input: RetailerInput!, retailerId: Int): Retailer
}
